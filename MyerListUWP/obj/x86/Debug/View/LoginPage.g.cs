#pragma checksum "D:\Dev\apps\MyerListUWP\MyerListUWP\View\LoginPage.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "0D98815CF885CC6A6C7F3C1308217BDF"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyerList
{
    partial class LoginPage : 
        global::MyerList.Base.BindablePage, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        internal class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_PasswordBox_Password(global::Windows.UI.Xaml.Controls.PasswordBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Password = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        private class LoginPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ILoginPage_Bindings
        {
            private global::MyerList.LoginPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.Grid obj7;
            private global::Windows.UI.Xaml.Controls.TextBox obj9;
            private global::Windows.UI.Xaml.Controls.PasswordBox obj10;
            private global::Windows.UI.Xaml.Controls.PasswordBox obj11;
            private global::Windows.UI.Xaml.Controls.Button obj12;
            private global::Windows.UI.Xaml.Controls.TextBlock obj13;
            private global::Windows.UI.Xaml.Controls.TextBlock obj14;

            private LoginPage_obj1_BindingsTracking bindingsTracking;

            public LoginPage_obj1_Bindings()
            {
                this.bindingsTracking = new LoginPage_obj1_BindingsTracking(this);
            }

            ~LoginPage_obj1_Bindings()
            {
                StopTracking();
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 7:
                        this.obj7 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 9:
                        this.obj9 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        (this.obj9).LostFocus += (global::System.Object sender, global::Windows.UI.Xaml.RoutedEventArgs e) =>
                            {
                                if (this.initialized)
                                {
                                    // Update Two Way binding
                                    this.dataRoot.LoginVM.TempEmail = (this.obj9).Text;
                                }
                            };
                        break;
                    case 10:
                        this.obj10 = (global::Windows.UI.Xaml.Controls.PasswordBox)target;
                        (this.obj10).RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.PasswordBox.PasswordProperty,
                            (global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop) =>
                            {
                                if (this.initialized)
                                {
                                    // Update Two Way binding
                                    this.dataRoot.LoginVM.InputPassword = (this.obj10).Password;
                                }
                            });
                        break;
                    case 11:
                        this.obj11 = (global::Windows.UI.Xaml.Controls.PasswordBox)target;
                        (this.obj11).RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.PasswordBox.PasswordProperty,
                            (global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop) =>
                            {
                                if (this.initialized)
                                {
                                    // Update Two Way binding
                                    this.dataRoot.LoginVM.ConfirmPassword = (this.obj11).Password;
                                }
                            });
                        break;
                    case 12:
                        this.obj12 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 13:
                        this.obj13 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 14:
                        this.obj14 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            // ILoginPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            // LoginPage_obj1_Bindings

            public void SetDataRoot(global::MyerList.LoginPage newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::MyerList.LoginPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_LoginVM(obj.LoginVM, phase);
                    }
                }
            }
            private void Update_LoginVM(global::MyerList.ViewModel.LoginViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_LoginVM(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_LoginVM_IsLoading(obj.IsLoading, phase);
                        this.Update_LoginVM_TempEmail(obj.TempEmail, phase);
                        this.Update_LoginVM_InputPassword(obj.InputPassword, phase);
                        this.Update_LoginVM_ShowRegister(obj.ShowRegister, phase);
                        this.Update_LoginVM_ConfirmPassword(obj.ConfirmPassword, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_LoginVM_NextCommand(obj.NextCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_LoginVM_BtnContent(obj.BtnContent, phase);
                        this.Update_LoginVM_Title(obj.Title, phase);
                    }
                }
            }
            private void Update_LoginVM_IsLoading(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj7, obj);
                }
            }
            private void Update_LoginVM_TempEmail(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj9, obj, null);
                }
            }
            private void Update_LoginVM_InputPassword(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_PasswordBox_Password(this.obj10, obj, null);
                }
            }
            private void Update_LoginVM_ShowRegister(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj11, obj);
                }
            }
            private void Update_LoginVM_ConfirmPassword(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_PasswordBox_Password(this.obj11, obj, null);
                }
            }
            private void Update_LoginVM_NextCommand(global::GalaSoft.MvvmLight.Command.RelayCommand obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj12, obj, null);
                }
            }
            private void Update_LoginVM_BtnContent(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj13, obj, null);
                }
            }
            private void Update_LoginVM_Title(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj14, obj, null);
                }
            }

            private class LoginPage_obj1_BindingsTracking
            {
                global::System.WeakReference<LoginPage_obj1_Bindings> WeakRefToBindingObj; 

                public LoginPage_obj1_BindingsTracking(LoginPage_obj1_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<LoginPage_obj1_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_LoginVM(null);
                }

                public void PropertyChanged_LoginVM(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    LoginPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::MyerList.ViewModel.LoginViewModel obj = sender as global::MyerList.ViewModel.LoginViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_LoginVM_IsLoading(obj.IsLoading, DATA_CHANGED);
                                    bindings.Update_LoginVM_TempEmail(obj.TempEmail, DATA_CHANGED);
                                    bindings.Update_LoginVM_InputPassword(obj.InputPassword, DATA_CHANGED);
                                    bindings.Update_LoginVM_ShowRegister(obj.ShowRegister, DATA_CHANGED);
                                    bindings.Update_LoginVM_ConfirmPassword(obj.ConfirmPassword, DATA_CHANGED);
                                    bindings.Update_LoginVM_BtnContent(obj.BtnContent, DATA_CHANGED);
                                    bindings.Update_LoginVM_Title(obj.Title, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsLoading" :
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_LoginVM_IsLoading(obj.IsLoading, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TempEmail" :
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_LoginVM_TempEmail(obj.TempEmail, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "InputPassword" :
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_LoginVM_InputPassword(obj.InputPassword, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ShowRegister" :
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_LoginVM_ShowRegister(obj.ShowRegister, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ConfirmPassword" :
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_LoginVM_ConfirmPassword(obj.ConfirmPassword, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "BtnContent" :
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_LoginVM_BtnContent(obj.BtnContent, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Title" :
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_LoginVM_Title(obj.Title, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                    else
                    {
                        ReleaseAllListeners();
                    }
                }
                private global::MyerList.ViewModel.LoginViewModel cache_LoginVM = null;
                public void UpdateChildListeners_LoginVM(global::MyerList.ViewModel.LoginViewModel obj)
                {
                    if (obj != cache_LoginVM)
                    {
                        if (cache_LoginVM != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_LoginVM).PropertyChanged -= PropertyChanged_LoginVM;
                            cache_LoginVM = null;
                        }
                        if (obj != null)
                        {
                            cache_LoginVM = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_LoginVM;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2:
                {
                    this.BackStory = (global::Windows.UI.Xaml.Media.Animation.Storyboard)(target);
                }
                break;
            case 3:
                {
                    this.image = (global::Windows.UI.Xaml.Controls.Image)(target);
                }
                break;
            case 4:
                {
                    this.border = (global::Windows.UI.Xaml.Controls.Border)(target);
                }
                break;
            case 5:
                {
                    this.stackPanel = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 6:
                {
                    this.grid = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 7:
                {
                    this.grid1 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 8:
                {
                    this.ToastControl = (global::MyerList.UC.ToastUC)(target);
                }
                break;
            case 15:
                {
                    this.LoginHint = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1:
                {
                    global::MyerList.Base.BindablePage element1 = (global::MyerList.Base.BindablePage)target;
                    LoginPage_obj1_Bindings bindings = new LoginPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

